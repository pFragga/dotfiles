#!/bin/sh

bmks="${XDG_DATA_HOME:-$HOME/.local/share}"/bookmarks.csv
if [ ! -f "$bmks" ];
then
	printf "%s: you don't have a bookmarks file.\n" "$(basename "$0")" >&2
	exit 1
fi

sel_title() {
	len=$(wc -l "$bmks")
	title=$(awk -F ',' 'NR>1 {print $1}' "$bmks" \
		| sort \
		| dmenu -i -l "$len" -p 'Bookmarks:')
	printf "%s" "$title"
}

new_bmk() {
	title=$(dmenu -p 'Title:' < /dev/null)
	[ -z "$title" ] && return 1
	url=$(dmenu -p 'Url:' < /dev/null)
	[ -z "$url" ] && return 1
	printf "%s,%s" "$title" "$url"
}

action=$(printf "open\ncopy\ninsert\nremove" | dmenu -i -p 'Choose an action:')
case $action in
	open|copy)
		title=$(sel_title)
		[ -z "$title" ] && exit
		row=$(grep "$title" "$bmks")
		url="${row#*,}"
		if [ -z "$url" ];
		then
			exit 1
		else
			if [ "$action" = open ];
			then
				xdg-open "$url"
				notify-send "Opened in browser" "$url"
			else
				printf "%s" "$url" | xclip -i -selection clipboard
				notify-send "Copied to clipboard" "$url"
			fi
		fi
		;;
	insert)
		if new=$(new_bmk);
		then
			printf "%s\n" "$new" >> "$bmks"
			notify-send "New bookmark added" "$new"
		fi
		;;
	remove)
		title=$(sel_title)
		[ -z "$title" ] && exit
		row=$(grep "$title" "$bmks")
		if [ -z "$row" ];
		then
			exit 1
		else
			grep -v "$row" "$bmks" >> "$bmks.$$"
			mv "$bmks.$$" "$bmks"
			notify-send "Removed bookmark" "$row"
		fi
		;;
	*)
		exit 1
		;;
esac
